Index: ../stack/app/src/main/java/stack/Cat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/main/java/stack/Cat.java b/../stack/app/src/main/java/stack/Cat.java
new file mode 100644
--- /dev/null	
+++ b/../stack/app/src/main/java/stack/Cat.java	
@@ -0,0 +1,7 @@
+package stack;
+
+public class Cat extends Animal{
+    public Cat(String CatName) {
+        super(CatName);
+    }
+}
Index: ../stack/app/src/test/java/stack/AppTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * This Java source file was generated by the Gradle 'init' task.\n */\npackage stack;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\n\n\n\nclass AppTest {\n    @Test void appHasAGreeting() {\n        App classUnderTest = new App();\n        assertNotNull(classUnderTest.getGreeting(), \"app should have a greeting\");\n    }\n    @Test\n    public void pushToStackTest(){\n        Stack<Integer> stackTest = new Stack<>();\n        stackTest.push(11);\n        stackTest.push(7);\n        stackTest.push(2021);\n        assertEquals(\"Stack { 2021 --> 7 --> 11 --> Null }\",stackTest.toString());\n    }\n\n    @Test\n    public void popStackTest(){\n        Stack<Integer> stackTest = new Stack<>();\n        stackTest.push(11);\n        stackTest.push(7);\n        stackTest.push(2021);\n        stackTest.pop();\n        assertEquals(\"Stack { 7 --> 11 --> Null }\",stackTest.toString());\n    }\n\n    @Test\n    public void emptyStackTest(){\n        Stack<Integer> stackTest = new Stack<>();\n        stackTest.push(11);\n        stackTest.push(7);\n        stackTest.push(2021);\n        stackTest.pop();\n        stackTest.pop();\n        stackTest.pop();\n        assertEquals(\"Stack { Null }\",stackTest.toString());\n        assertTrue(stackTest.isEmpty());\n        assertEquals(0,stackTest.pop());\n        assertEquals(0,stackTest.peek());\n\n\n    }\n\n    @Test\n    public void peekStackTest(){\n        Stack<Integer> stackTest = new Stack<>();\n        stackTest.push(11);\n        stackTest.push(7);\n        stackTest.push(2021);\n        assertEquals(2021,stackTest.peek());\n        stackTest.pop();\n        assertEquals(7,stackTest.peek());\n    }\n\n    @Test\n    public void enqueueToQueueTest(){\n        Queue<Integer> queueTest = new Queue<>();\n        queueTest.enqueue(11);\n        queueTest.enqueue(7);\n        queueTest.enqueue(2021);\n        assertEquals(\"Queue { 11 --> 7 --> 2021 --> Null }\",queueTest.toString());\n    }\n\n    @Test\n    public void dequeueFromQueueTest(){\n        Queue<Integer> queueTest = new Queue<>();\n        queueTest.enqueue(11);\n        queueTest.enqueue(7);\n        queueTest.enqueue(2021);\n\n        queueTest.dequeue();\n        assertEquals(\"Queue { 7 --> 2021 --> Null }\",queueTest.toString());\n    }\n    @Test\n    public void emptyQueueTest(){\n        Queue<Integer> queueTest = new Queue<>();\n        queueTest.enqueue(11);\n        queueTest.enqueue(7);\n        queueTest.enqueue(2021);\n        queueTest.dequeue();\n        queueTest.dequeue();\n        queueTest.dequeue();\n        assertTrue(queueTest.isEmpty());\n        assertEquals(\"Queue { Null }\",queueTest.toString());\n        assertEquals( 0,queueTest.dequeue());\n        assertEquals(0,queueTest.peek());\n    }\n\n    @Test\n    public void peekQueueTest(){\n        Queue<Integer> queueTest = new Queue<>();\n        queueTest.enqueue(11);\n        queueTest.enqueue(7);\n        queueTest.enqueue(2021);\n        assertEquals(11,queueTest.peek());\n        queueTest.dequeue();\n        assertEquals(7,queueTest.peek());\n    }\n//    -------------------------\n@Test\npublic void enqueueTest(){\n\n    PseudoQueue pseudoQueue = new PseudoQueue();\n\n    pseudoQueue.enqueue(11);\n    assertEquals(\"Stack { 11 --> Null }\",pseudoQueue.toString());\n    pseudoQueue.enqueue(6);\n    pseudoQueue.enqueue(2017);\n    assertEquals(11,pseudoQueue.stack1.peek());\n    assertEquals(\"Stack { 11 --> 6 --> 2017 --> Null }\",pseudoQueue.toString());\n    assertFalse(pseudoQueue.stack1.isEmpty());\n}\n\n    @Test\n    public void dequeueTest(){\n        PseudoQueue pseudoQueue = new PseudoQueue();\n        pseudoQueue.enqueue(11);\n        pseudoQueue.enqueue(6);\n        pseudoQueue.enqueue(2017);\n\n        assertEquals(11 ,pseudoQueue.dequeue());\n        assertEquals(\"Stack { 6 --> 2017 --> Null }\",pseudoQueue.toString());\n        pseudoQueue.dequeue();\n        pseudoQueue.dequeue();\n        assertTrue(pseudoQueue.stack1.isEmpty());\n        assertEquals(\"Stack { Null }\",pseudoQueue.toString());\n        assertEquals(0,pseudoQueue.dequeue());\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/test/java/stack/AppTest.java b/../stack/app/src/test/java/stack/AppTest.java
--- a/../stack/app/src/test/java/stack/AppTest.java	
+++ b/../stack/app/src/test/java/stack/AppTest.java	
@@ -91,7 +91,7 @@
         queueTest.dequeue();
         assertTrue(queueTest.isEmpty());
         assertEquals("Queue { Null }",queueTest.toString());
-        assertEquals( 0,queueTest.dequeue());
+        assertNull( null, String.valueOf(queueTest.dequeue()));
         assertEquals(0,queueTest.peek());
     }
 
@@ -118,6 +118,7 @@
     assertEquals(11,pseudoQueue.stack1.peek());
     assertEquals("Stack { 11 --> 6 --> 2017 --> Null }",pseudoQueue.toString());
     assertFalse(pseudoQueue.stack1.isEmpty());
+
 }
 
     @Test
@@ -133,7 +134,18 @@
         pseudoQueue.dequeue();
         assertTrue(pseudoQueue.stack1.isEmpty());
         assertEquals("Stack { Null }",pseudoQueue.toString());
-        assertEquals(0,pseudoQueue.dequeue());
+        assertNull(null, String.valueOf(pseudoQueue.dequeue()));
+    }
+//    ----------------
+    @Test
+    public void enquequeAnimalTest(){
+        AnimalShelter shelterAnim = new AnimalShelter();
+
+        shelterAnim.enqueue(new Cat("oneCat"));
+
+        shelterAnim.enqueue(new Dog("oneDog"));
+
+        assertEquals("null",shelterAnim);
     }
 
 }
Index: ../stack/app/src/main/java/stack/Animal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/main/java/stack/Animal.java b/../stack/app/src/main/java/stack/Animal.java
new file mode 100644
--- /dev/null	
+++ b/../stack/app/src/main/java/stack/Animal.java	
@@ -0,0 +1,20 @@
+package stack;
+
+public class Animal {
+    private String AnimalName;
+
+    public Animal(String animalName) {
+        AnimalName = animalName;
+    }
+
+    public String getAnimalName() {
+        return AnimalName;
+    }
+
+    @Override
+    public String toString() {
+        return "Animal{" +
+                "AnimalName='" + AnimalName + '\'' +
+                '}';
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"25b39570-5f52-4548-a297-4017577314a7\" name=\"Default Changelist\" comment=\"finish codeChallenge 08\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view />\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/..\" value=\"linked-list-kth\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/lib/src/test/java/linked/list/LibraryTest.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/lib/src/main/java/linked/list/Node.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/lib/src/main/java/linked/list/LinkedList.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/lib/src/main/java/linked/list/Library.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1uritdQq77kwTLj8TIN1w4IU8Aj\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../quotes/quotes\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Gradle.LibraryTest\">\r\n    <configuration name=\"LibraryTest\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"--tests &quot;linked.list.LibraryTest&quot;\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":lib:test\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"LibraryTest.testZipListsExample1\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"--tests &quot;linked.list.LibraryTest.testZipListsExample1&quot;\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":lib:test\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"LibraryTest.testZipListsExample2\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"--tests &quot;linked.list.LibraryTest.testZipListsExample2&quot;\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":lib:test\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"LibraryTest.testZipListsExample3\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"--tests &quot;linked.list.LibraryTest.testZipListsExample3&quot;\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":lib:test\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"LibraryTest.zipListTest\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"--tests &quot;linked.list.LibraryTest.zipListTest&quot;\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":lib:test\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Gradle.LibraryTest\" />\r\n        <item itemvalue=\"Gradle.LibraryTest.testZipListsExample1\" />\r\n        <item itemvalue=\"Gradle.LibraryTest.testZipListsExample2\" />\r\n        <item itemvalue=\"Gradle.LibraryTest.testZipListsExample3\" />\r\n        <item itemvalue=\"Gradle.LibraryTest.zipListTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"25b39570-5f52-4548-a297-4017577314a7\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1625430345760</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1625430345760</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"finish codeChallenge 05\">\r\n      <created>1625514193096</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625514193097</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"finish codeChallenge 05\">\r\n      <created>1625517099970</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625517099970</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"finish codeChallenge 06\">\r\n      <created>1626206296830</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626206296830</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"finish codeChallenge 07\">\r\n      <created>1626300892795</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626300892795</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"finish codeChallenge 08\">\r\n      <created>1626538753238</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626538753238</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"finish codeChallenge 08\">\r\n      <created>1626540502490</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626540502490</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"finish codeChallenge 08\">\r\n      <created>1626558930553</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626558930553</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"finish codeChallenge 05\" />\r\n    <MESSAGE value=\"finish codeChallenge 06\" />\r\n    <MESSAGE value=\"finish codeChallenge 07\" />\r\n    <MESSAGE value=\"finish codeChallenge 08\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"finish codeChallenge 08\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,7 +4,19 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="25b39570-5f52-4548-a297-4017577314a7" name="Default Changelist" comment="finish codeChallenge 08" />
+    <list default="true" id="25b39570-5f52-4548-a297-4017577314a7" name="Default Changelist" comment="finish codeChallenge 08">
+      <change afterPath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Animal.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../stack/app/src/main/java/stack/AnimalShelter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Cat.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Dog.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../stack/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../stack/.idea/gradle.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../stack/app/src/main/java/stack/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/../stack/app/src/main/java/stack/App.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Node.java" beforeDir="false" afterPath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Node.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Queue.java" beforeDir="false" afterPath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Queue.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Stack.java" beforeDir="false" afterPath="$PROJECT_DIR$/../stack/app/src/main/java/stack/Stack.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../stack/app/src/test/java/stack/AppTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../stack/app/src/test/java/stack/AppTest.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -55,7 +67,7 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../quotes/quotes" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/.." />
     <property name="project.structure.last.edited" value="Project" />
     <property name="project.structure.proportion" value="0.0" />
     <property name="project.structure.side.proportion" value="0.0" />
Index: ../stack/.idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleHome\" value=\"$PROJECT_DIR$/../../../../../../Gradle/gradle-7.1\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/.idea/gradle.xml b/../stack/.idea/gradle.xml
--- a/../stack/.idea/gradle.xml	
+++ b/../stack/.idea/gradle.xml	
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: ../stack/app/src/main/java/stack/AnimalShelter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/main/java/stack/AnimalShelter.java b/../stack/app/src/main/java/stack/AnimalShelter.java
new file mode 100644
--- /dev/null	
+++ b/../stack/app/src/main/java/stack/AnimalShelter.java	
@@ -0,0 +1,40 @@
+package stack;
+
+public class AnimalShelter {
+    public Queue<Cat> catQueue;
+    public Queue<Dog> dogQueue;
+
+    public AnimalShelter() {
+        this.catQueue = new Queue<>();
+        this.dogQueue = new Queue<>();
+    }
+    public void enqueue(Animal animal){
+
+        if (animal instanceof Cat){
+            catQueue.enqueue((Cat) animal);
+        }else if(animal instanceof Dog){
+            dogQueue.enqueue((Dog) animal);
+        }else{
+            System.out.println("Accept dogs or cats just");
+        }
+    }
+
+    public Animal dequeue(String pref){
+        if(pref.equals("Cato") && !catQueue.isEmpty()){
+            return catQueue.dequeue();
+        }else if (pref.equals("Dogo") && !dogQueue.isEmpty()){
+            return dogQueue.dequeue();
+        }else{
+            return null;
+        }
+    }
+
+    @Override
+    public String toString() {
+        return "AnimalShelter{" +
+                "catQueue=" + catQueue +
+                ", dogQueue=" + dogQueue +
+                '}';
+    }
+}
+
Index: ../stack/app/src/main/java/stack/Dog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/main/java/stack/Dog.java b/../stack/app/src/main/java/stack/Dog.java
new file mode 100644
--- /dev/null	
+++ b/../stack/app/src/main/java/stack/Dog.java	
@@ -0,0 +1,7 @@
+package stack;
+
+public class Dog extends Animal{
+    public Dog(String DodName) {
+        super(DodName);
+    }
+}
Index: ../stack/app/src/main/java/stack/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * This Java source file was generated by the Gradle 'init' task.\n */\npackage stack;\n\npublic class App {\n    public String getGreeting() {\n        return \"Hello World!\";\n    }\n\n    public static void main(String[] args) {\n        System.out.println(new App().getGreeting());\n        Stack<Integer> stack = new Stack<>();\n\n        stack.push(1);\n        stack.push(2);\n        stack.push(3);\n\n        System.out.println(stack);\n\n        stack.pop();\n        System.out.println(stack);\n        System.out.println(stack.isEmpty());\n        System.out.println(stack.peek());\n\n\n        Queue<Integer> queue = new Queue<>();\n\n        queue.enqueue(1);\n        queue.enqueue(2);\n        queue.enqueue(3);\n\n        System.out.println(queue);\n        queue.dequeue();\n        queue.dequeue();\n        queue.dequeue();\n//        queue.peek();\n\n        System.out.println(queue);\n        System.out.println(queue.isEmpty());\n//        System.out.println(queue.peek());\n//        queue.dequeue();\n\n\n//        -------------------------\n        PseudoQueue stack1 = new PseudoQueue();\n\n        stack1.enqueue(20);\n        stack1.enqueue(15);\n        stack1.enqueue(10);\n\n        System.out.println(stack1);\n\n\n        stack1.enqueue(5);\n        System.out.println(stack1);\n\n        System.out.println(stack1.dequeue());\n        System.out.println(stack1);\n\n        System.out.println(stack1.dequeue());\n        System.out.println(stack1);\n\n        stack1.enqueue(7);\n        System.out.println(stack1);\n    }\n\n    }\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/main/java/stack/App.java b/../stack/app/src/main/java/stack/App.java
--- a/../stack/app/src/main/java/stack/App.java	
+++ b/../stack/app/src/main/java/stack/App.java	
@@ -63,6 +63,26 @@
 
         stack1.enqueue(7);
         System.out.println(stack1);
+
+//        ----------------------------
+        AnimalShelter shelterAnim = new AnimalShelter();
+
+        shelterAnim.enqueue(new Cat("oneCat"));
+        shelterAnim.enqueue(new Cat("twoCat"));
+        shelterAnim.enqueue(new Cat("threeCat"));
+
+
+        shelterAnim.enqueue(new Dog("oneDog"));
+        shelterAnim.enqueue(new Dog("twoDog"));
+        shelterAnim.enqueue(new Dog("threeDog"));
+
+        System.out.println(shelterAnim);
+
+        shelterAnim.dequeue("Cato");
+        System.out.println(shelterAnim);
+
+        shelterAnim.dequeue("Dogo");
+        System.out.println(shelterAnim);
     }
 
     }
Index: ../stack/app/src/main/java/stack/Node.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package stack;\r\n\r\npublic class Node {\r\n    public Node next;\r\n    private int data;\r\n\r\n    public Node(int data){\r\n        this.data = data;\r\n    }\r\n\r\n    public int getData() {\r\n        return data;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/main/java/stack/Node.java b/../stack/app/src/main/java/stack/Node.java
--- a/../stack/app/src/main/java/stack/Node.java	
+++ b/../stack/app/src/main/java/stack/Node.java	
@@ -1,14 +1,14 @@
 package stack;
 
-public class Node {
+public class Node<T> {
     public Node next;
-    private int data;
+    private T data;
 
-    public Node(int data){
+    public Node(T data){
         this.data = data;
     }
 
-    public int getData() {
+    public T getData() {
         return data;
     }
 }
Index: ../stack/app/src/main/java/stack/Queue.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package stack;\r\n\r\npublic class Queue <T>{\r\n    Node front;\r\n    Node rear;\r\n\r\n    public Queue(){\r\n        this.front = this.rear = null;\r\n    }\r\n\r\n    public void enqueue(int value){\r\n        Node newNode = new Node(value);\r\n\r\n        if(this.rear == null){\r\n            this.front = this.rear = newNode;\r\n        }\r\n\r\n        this.rear.next = newNode;\r\n        this.rear = newNode;\r\n    }\r\n\r\n    public int dequeue() {\r\n\r\n        if(this.front == null){\r\n            System.out.println(\"The Queue is empty and the zero value indicates not the actual value\");\r\n            return 0;\r\n        }else{\r\n            Node temp = this.front;\r\n            this.front = this.front.next;\r\n            return temp.getData();\r\n        }\r\n    }\r\n\r\n    public int peek(){\r\n        if(front == null){\r\n            System.out.println(\"The Queue is empty and the zero value indicates not the actual value\");\r\n            return 0;\r\n        }else{\r\n            return front.getData();\r\n        }\r\n    }\r\n\r\n    public boolean isEmpty(){\r\n        if(front == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        String queueValue = \"Queue { \";\r\n        Node trav = front;\r\n        while (trav != null){\r\n            queueValue += trav.getData() + \" --> \";\r\n            trav = trav.next;\r\n        }\r\n        queueValue += \"Null }\";\r\n        return queueValue;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/main/java/stack/Queue.java b/../stack/app/src/main/java/stack/Queue.java
--- a/../stack/app/src/main/java/stack/Queue.java	
+++ b/../stack/app/src/main/java/stack/Queue.java	
@@ -1,14 +1,14 @@
 package stack;
 
 public class Queue <T>{
-    Node front;
-    Node rear;
+    Node<T> front;
+    Node<T> rear;
 
     public Queue(){
         this.front = this.rear = null;
     }
 
-    public void enqueue(int value){
+    public void enqueue(T value){
         Node newNode = new Node(value);
 
         if(this.rear == null){
@@ -19,15 +19,15 @@
         this.rear = newNode;
     }
 
-    public int dequeue() {
+    public T dequeue() {
 
         if(this.front == null){
             System.out.println("The Queue is empty and the zero value indicates not the actual value");
-            return 0;
+            return null;
         }else{
-            Node temp = this.front;
+            Node<T> temp = this.front;
             this.front = this.front.next;
-            return temp.getData();
+            return (T) temp.getData();
         }
     }
 
@@ -36,7 +36,7 @@
             System.out.println("The Queue is empty and the zero value indicates not the actual value");
             return 0;
         }else{
-            return front.getData();
+            return (int) front.getData();
         }
     }
 
Index: ../stack/app/src/main/java/stack/Stack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package stack;\r\n\r\npublic class Stack <T>{\r\n    Node top;\r\n\r\n    public void push(int value){\r\n        Node newNode = new Node(value);\r\n        if (top == null){\r\n            top = newNode;\r\n        }else{\r\n            Node temp = top;\r\n            top = newNode;\r\n            newNode.next = temp;\r\n        }\r\n        System.out.println(\"The value \" + value + \" pushed to the Stack\");\r\n    }\r\n\r\n    public int pop(){\r\n\r\n        int popped=0;\r\n\r\n        if(top == null){\r\n            System.out.println(\"The Stack is empty and the zero value indicates not the actual value\");\r\n            return 0;\r\n        }else{\r\n            popped = top.getData();\r\n            top = top.next;\r\n        }\r\n        return popped;\r\n    }\r\n\r\n    public int peek(){\r\n        if(top == null){\r\n            System.out.println(\"The Stack is empty and the zero value indicates not the actual value\");\r\n            return 0;\r\n        }else{\r\n            return top.getData();\r\n        }\r\n    }\r\n\r\n    public boolean isEmpty(){\r\n        if(top == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public String toString() {\r\n        String stackValue = \"Stack { \";\r\n        Node trav = top;\r\n        while (trav != null){\r\n            stackValue += trav.getData() + \" --> \";\r\n            trav=trav.next;\r\n        }\r\n        stackValue += \"Null }\";\r\n        return stackValue;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../stack/app/src/main/java/stack/Stack.java b/../stack/app/src/main/java/stack/Stack.java
--- a/../stack/app/src/main/java/stack/Stack.java	
+++ b/../stack/app/src/main/java/stack/Stack.java	
@@ -1,10 +1,10 @@
 package stack;
 
 public class Stack <T>{
-    Node top;
+    Node<T> top;
 
     public void push(int value){
-        Node newNode = new Node(value);
+        Node<T> newNode = new Node(value);
         if (top == null){
             top = newNode;
         }else{
@@ -23,7 +23,7 @@
             System.out.println("The Stack is empty and the zero value indicates not the actual value");
             return 0;
         }else{
-            popped = top.getData();
+            popped = (int) top.getData();
             top = top.next;
         }
         return popped;
@@ -32,9 +32,9 @@
     public int peek(){
         if(top == null){
             System.out.println("The Stack is empty and the zero value indicates not the actual value");
-            return 0;
+            return  0;
         }else{
-            return top.getData();
+            return (int) top.getData();
         }
     }
 
